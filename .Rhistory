tissue
tissue1
agemap_data_list[[tissue_label[1]]][,gene]
## 02. MC-TC identified genes
tissue_gene_boxplot <- function(tissue_label, gene, tissue_name){
tissue1 = scale(agemap_data_list[[tissue_label[1]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[1]]])
tissue2 = scale(agemap_data_list[[tissue_label[2]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[2]]])
tissue1.long = tissue1 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[1])
tissue2.long = tissue2 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[2])
tissue = rbind(tissue1.long, tissue2.long)
# tissue$gene = gene_map$SYMBOL[match(tissue$gene,gene_map$UNIGENE)]
figure <- ggboxplot(tissue, x = "time", y = "expression",
add = "jitter", add.params = list(alpha = 0.6, size = 1),
facet.by = c("tissue", "gene"), color = "gene",
font.label = list(face = "bold", size = 18)) +
theme_bw() +
theme(legend.position="none", strip.text.x = element_text(face = "bold", size = 15),
strip.text.y = element_text(face = "bold", size = 15),
axis.title = element_text(size=15,face="bold"),
axis.text = element_text(size=15)) +
ylim(c(-2,2)) +
stat_summary(fun = median, geom = "line", aes(group=1, color=gene), size = 1) +
ylab("") + xlab("")
return(figure)
}
grp_name = combn(c("Ms", "Ad", "Hi", "Sp", "S"), 2)
grp_num  = combn(1:5, 2)
bp_list <- c()
for (i in c(1:8,10)){
tissue_num  = grp_num[,i]
tissue_name = grp_name[,i]
gene_identify = which(agemap_result$MCTC_tbl$qval < 0.05 & agemap_result$pairs_MI_tbl_list[[i]]$qval < 0.05)
bp_list <-c(bp_list, list(tissue_gene_boxplot(tissue_num, gene_identify, tissue_name)))
}
bp1 = plot_grid(bp_list[[1]], NULL, nrow = 1, rel_widths = c(13, 0))
bp2 = plot_grid(bp_list[[2]], NULL, nrow = 1, rel_widths = c(3, 9))
bp3 = plot_grid(bp_list[[3]], NULL, nrow = 1, rel_widths = c(7, 6))
bp4 = plot_grid(bp_list[[4]], NULL, nrow = 1, rel_widths = c(8, 5))
bp5 = plot_grid(bp_list[[5]], NULL, nrow = 1, rel_widths = c(1, 8))
bp6 = plot_grid(bp_list[[6]], NULL, nrow = 1, rel_widths = c(4, 8))
bp7 = plot_grid(bp_list[[7]], NULL, nrow = 1, rel_widths = c(5, 7))
bp8 = plot_grid(bp_list[[8]], NULL, nrow = 1, rel_widths = c(7, 6))
bp10 = plot_grid(bp_list[[9]], NULL, nrow = 1, rel_widths = c(5, 7))
supfig1 = plot_grid(bp1, bp2, bp3, bp4, bp5, bp6, bp7, bp8, bp10,
ncol = 1, align = "v", axis = "tblr")
ggsave(supfig1, width = 20, height = 30, unit = "in", file = "supfig1_mcmi.svg")
figure <- ggboxplot(tissue, x = "time", y = "expression",
add = "jitter", add.params = list(alpha = 0.6, size = 1),
facet.by = c("tissue", "gene"), color = "gene",
font.label = list(face = "bold", size = 20)) +
theme_bw() +
theme(legend.position="none", strip.text.x = element_text(face = "bold", size = 15),
strip.text.y = element_text(face = "bold", size = 15),
axis.title = element_text(size=15,face="bold"),
axis.text = element_text(size=15)) +
ylim(c(-2,2)) +
stat_summary(fun = median, geom = "line", aes(group=1, color=gene), size = 1) +
ylab("") + xlab("")
return(figure)
## 02. MC-TC identified genes
tissue_gene_boxplot <- function(tissue_label, gene, tissue_name){
tissue1 = scale(agemap_data_list[[tissue_label[1]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[1]]])
tissue2 = scale(agemap_data_list[[tissue_label[2]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[2]]])
tissue1.long = tissue1 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[1])
tissue2.long = tissue2 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[2])
tissue = rbind(tissue1.long, tissue2.long)
# tissue$gene = gene_map$SYMBOL[match(tissue$gene,gene_map$UNIGENE)]
figure <- ggboxplot(tissue, x = "time", y = "expression",
add = "jitter", add.params = list(alpha = 0.6, size = 1),
facet.by = c("tissue", "gene"), color = "gene",
font.label = list(face = "bold", size = 20)) +
theme_bw() +
theme(legend.position="none", strip.text.x = element_text(face = "bold", size = 15),
strip.text.y = element_text(face = "bold", size = 15),
axis.title = element_text(size=15,face="bold"),
axis.text = element_text(size=15)) +
ylim(c(-2,2)) +
stat_summary(fun = median, geom = "line", aes(group=1, color=gene), size = 1) +
ylab("") + xlab("")
return(figure)
}
grp_name = combn(c("Ms", "Ad", "Hi", "Sp", "S"), 2)
grp_num  = combn(1:5, 2)
bp_list <- c()
for (i in c(1:8,10)){
tissue_num  = grp_num[,i]
tissue_name = grp_name[,i]
gene_identify = which(agemap_result$MCTC_tbl$qval < 0.05 & agemap_result$pairs_MI_tbl_list[[i]]$qval < 0.05)
bp_list <-c(bp_list, list(tissue_gene_boxplot(tissue_num, gene_identify, tissue_name)))
}
bp1 = plot_grid(bp_list[[1]], NULL, nrow = 1, rel_widths = c(13, 0))
bp2 = plot_grid(bp_list[[2]], NULL, nrow = 1, rel_widths = c(3, 9))
bp3 = plot_grid(bp_list[[3]], NULL, nrow = 1, rel_widths = c(7, 6))
bp4 = plot_grid(bp_list[[4]], NULL, nrow = 1, rel_widths = c(8, 5))
bp5 = plot_grid(bp_list[[5]], NULL, nrow = 1, rel_widths = c(1, 8))
bp6 = plot_grid(bp_list[[6]], NULL, nrow = 1, rel_widths = c(4, 8))
bp7 = plot_grid(bp_list[[7]], NULL, nrow = 1, rel_widths = c(5, 7))
bp8 = plot_grid(bp_list[[8]], NULL, nrow = 1, rel_widths = c(7, 6))
bp10 = plot_grid(bp_list[[9]], NULL, nrow = 1, rel_widths = c(5, 7))
supfig1 = plot_grid(bp1, bp2, bp3, bp4, bp5, bp6, bp7, bp8, bp10,
ncol = 1, align = "v", axis = "tblr")
ggsave(supfig1, width = 20, height = 30, unit = "in", file = "supfig1_mcmi.svg")
figure <- ggboxplot(tissue, x = "time", y = "expression",
add = "jitter", add.params = list(alpha = 0.6, size = 1),
facet.by = c("tissue", "gene"), color = "gene",
font.label = list(face = "bold", size = 20)) +
theme_bw() +
theme(legend.position="none", strip.text.x = element_text(face = "bold", size = 15),
strip.text.y = element_text(face = "bold", size = 15),
axis.title = element_text(size=20,face="bold"),
axis.text = element_text(size=15)) +
ylim(c(-2,2)) +
stat_summary(fun = median, geom = "line", aes(group=1, color=gene), size = 1) +
ylab("") + xlab("")
## 02. MC-TC identified genes
tissue_gene_boxplot <- function(tissue_label, gene, tissue_name){
tissue1 = scale(agemap_data_list[[tissue_label[1]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[1]]])
tissue2 = scale(agemap_data_list[[tissue_label[2]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[2]]])
tissue1.long = tissue1 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[1])
tissue2.long = tissue2 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[2])
tissue = rbind(tissue1.long, tissue2.long)
# tissue$gene = gene_map$SYMBOL[match(tissue$gene,gene_map$UNIGENE)]
figure <- ggboxplot(tissue, x = "time", y = "expression",
add = "jitter", add.params = list(alpha = 0.6, size = 1),
facet.by = c("tissue", "gene"), color = "gene",
font.label = list(face = "bold", size = 20)) +
theme_bw() +
theme(legend.position="none", strip.text.x = element_text(face = "bold", size = 15),
strip.text.y = element_text(face = "bold", size = 15),
axis.title = element_text(size=20,face="bold"),
axis.text = element_text(size=15)) +
ylim(c(-2,2)) +
stat_summary(fun = median, geom = "line", aes(group=1, color=gene), size = 1) +
ylab("") + xlab("")
return(figure)
}
grp_name = combn(c("Ms", "Ad", "Hi", "Sp", "S"), 2)
grp_num  = combn(1:5, 2)
bp_list <- c()
for (i in c(1:8,10)){
tissue_num  = grp_num[,i]
tissue_name = grp_name[,i]
gene_identify = which(agemap_result$MCTC_tbl$qval < 0.05 & agemap_result$pairs_MI_tbl_list[[i]]$qval < 0.05)
bp_list <-c(bp_list, list(tissue_gene_boxplot(tissue_num, gene_identify, tissue_name)))
}
bp1 = plot_grid(bp_list[[1]], NULL, nrow = 1, rel_widths = c(13, 0))
bp2 = plot_grid(bp_list[[2]], NULL, nrow = 1, rel_widths = c(3, 9))
bp3 = plot_grid(bp_list[[3]], NULL, nrow = 1, rel_widths = c(7, 6))
bp4 = plot_grid(bp_list[[4]], NULL, nrow = 1, rel_widths = c(8, 5))
bp5 = plot_grid(bp_list[[5]], NULL, nrow = 1, rel_widths = c(1, 8))
bp6 = plot_grid(bp_list[[6]], NULL, nrow = 1, rel_widths = c(4, 8))
bp7 = plot_grid(bp_list[[7]], NULL, nrow = 1, rel_widths = c(5, 7))
bp8 = plot_grid(bp_list[[8]], NULL, nrow = 1, rel_widths = c(7, 6))
bp10 = plot_grid(bp_list[[9]], NULL, nrow = 1, rel_widths = c(5, 7))
supfig1 = plot_grid(bp1, bp2, bp3, bp4, bp5, bp6, bp7, bp8, bp10,
ncol = 1, align = "v", axis = "tblr")
ggsave(supfig1, width = 20, height = 30, unit = "in", file = "supfig1_mcmi.svg")
## 02. MC-TC identified genes
tissue_gene_boxplot <- function(tissue_label, gene, tissue_name){
tissue1 = scale(agemap_data_list[[tissue_label[1]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[1]]])
tissue2 = scale(agemap_data_list[[tissue_label[2]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[2]]])
tissue1.long = tissue1 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[1])
tissue2.long = tissue2 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[2])
tissue = rbind(tissue1.long, tissue2.long)
# tissue$gene = gene_map$SYMBOL[match(tissue$gene,gene_map$UNIGENE)]
figure <- ggboxplot(tissue, x = "time", y = "expression",
add = "jitter", add.params = list(alpha = 0.6, size = 1),
facet.by = c("tissue", "gene"), color = "gene",
font.label = list(face = "bold", size = 20)) +
theme_bw() +
theme(legend.position="none", strip.text.x = element_text(face = "bold", size = 15),
strip.text.y = element_text(face = "bold", size = 15),
axis.title = element_text(size=15,face="bold"),
axis.text = element_text(size=20)) +
ylim(c(-2,2)) +
stat_summary(fun = median, geom = "line", aes(group=1, color=gene), size = 1) +
ylab("") + xlab("")
return(figure)
}
grp_name = combn(c("Ms", "Ad", "Hi", "Sp", "S"), 2)
grp_num  = combn(1:5, 2)
bp_list <- c()
for (i in c(1:8,10)){
tissue_num  = grp_num[,i]
tissue_name = grp_name[,i]
gene_identify = which(agemap_result$MCTC_tbl$qval < 0.05 & agemap_result$pairs_MI_tbl_list[[i]]$qval < 0.05)
bp_list <-c(bp_list, list(tissue_gene_boxplot(tissue_num, gene_identify, tissue_name)))
}
bp1 = plot_grid(bp_list[[1]], NULL, nrow = 1, rel_widths = c(13, 0))
bp2 = plot_grid(bp_list[[2]], NULL, nrow = 1, rel_widths = c(3, 9))
bp3 = plot_grid(bp_list[[3]], NULL, nrow = 1, rel_widths = c(7, 6))
bp4 = plot_grid(bp_list[[4]], NULL, nrow = 1, rel_widths = c(8, 5))
bp5 = plot_grid(bp_list[[5]], NULL, nrow = 1, rel_widths = c(1, 8))
bp6 = plot_grid(bp_list[[6]], NULL, nrow = 1, rel_widths = c(4, 8))
bp7 = plot_grid(bp_list[[7]], NULL, nrow = 1, rel_widths = c(5, 7))
bp8 = plot_grid(bp_list[[8]], NULL, nrow = 1, rel_widths = c(7, 6))
bp10 = plot_grid(bp_list[[9]], NULL, nrow = 1, rel_widths = c(5, 7))
supfig1 = plot_grid(bp1, bp2, bp3, bp4, bp5, bp6, bp7, bp8, bp10,
ncol = 1, align = "v", axis = "tblr")
ggsave(supfig1, width = 20, height = 30, unit = "in", file = "supfig1_mcmi.svg")
## 02. MC-TC identified genes
tissue_gene_boxplot <- function(tissue_label, gene, tissue_name){
tissue1 = scale(agemap_data_list[[tissue_label[1]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[1]]])
tissue2 = scale(agemap_data_list[[tissue_label[2]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[2]]])
tissue1.long = tissue1 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[1])
tissue2.long = tissue2 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[2])
tissue = rbind(tissue1.long, tissue2.long)
# tissue$gene = gene_map$SYMBOL[match(tissue$gene,gene_map$UNIGENE)]
figure <- ggboxplot(tissue, x = "time", y = "expression",
add = "jitter", add.params = list(alpha = 0.6, size = 1),
facet.by = c("tissue", "gene"), color = "gene",
font.label = list(face = "bold", size = 25)) +
theme_bw() +
theme(legend.position="none", strip.text.x = element_text(face = "bold", size = 15),
strip.text.y = element_text(face = "bold", size = 15),
axis.title = element_text(size=15,face="bold"),
axis.text = element_text(size=15)) +
ylim(c(-2,2)) +
stat_summary(fun = median, geom = "line", aes(group=1, color=gene), size = 1) +
ylab("") + xlab("")
return(figure)
}
grp_name = combn(c("Ms", "Ad", "Hi", "Sp", "S"), 2)
grp_num  = combn(1:5, 2)
bp_list <- c()
for (i in c(1:8,10)){
tissue_num  = grp_num[,i]
tissue_name = grp_name[,i]
gene_identify = which(agemap_result$MCTC_tbl$qval < 0.05 & agemap_result$pairs_MI_tbl_list[[i]]$qval < 0.05)
bp_list <-c(bp_list, list(tissue_gene_boxplot(tissue_num, gene_identify, tissue_name)))
}
bp1 = plot_grid(bp_list[[1]], NULL, nrow = 1, rel_widths = c(13, 0))
bp2 = plot_grid(bp_list[[2]], NULL, nrow = 1, rel_widths = c(3, 9))
bp3 = plot_grid(bp_list[[3]], NULL, nrow = 1, rel_widths = c(7, 6))
bp4 = plot_grid(bp_list[[4]], NULL, nrow = 1, rel_widths = c(8, 5))
bp5 = plot_grid(bp_list[[5]], NULL, nrow = 1, rel_widths = c(1, 8))
bp6 = plot_grid(bp_list[[6]], NULL, nrow = 1, rel_widths = c(4, 8))
bp7 = plot_grid(bp_list[[7]], NULL, nrow = 1, rel_widths = c(5, 7))
bp8 = plot_grid(bp_list[[8]], NULL, nrow = 1, rel_widths = c(7, 6))
bp10 = plot_grid(bp_list[[9]], NULL, nrow = 1, rel_widths = c(5, 7))
supfig1 = plot_grid(bp1, bp2, bp3, bp4, bp5, bp6, bp7, bp8, bp10,
ncol = 1, align = "v", axis = "tblr")
ggsave(supfig1, width = 20, height = 30, unit = "in", file = "supfig1_mcmi.svg")
ggsave(supfig1, width = 20, height = 25, unit = "in", file = "supfig1_mcmi.svg")
ggsave(supfig1, width = 7.5, height = 10, unit = "in", file = "supfig1_mcmi.svg")
## 02. MC-TC identified genes
tissue_gene_boxplot <- function(tissue_label, gene, tissue_name){
tissue1 = scale(agemap_data_list[[tissue_label[1]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[1]]])
tissue2 = scale(agemap_data_list[[tissue_label[2]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[2]]])
tissue1.long = tissue1 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[1])
tissue2.long = tissue2 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[2])
tissue = rbind(tissue1.long, tissue2.long)
# tissue$gene = gene_map$SYMBOL[match(tissue$gene,gene_map$UNIGENE)]
figure <- ggboxplot(tissue, x = "time", y = "expression",
add = "jitter", add.params = list(alpha = 0.6, size = 1),
facet.by = c("tissue", "gene"), color = "gene",
font.label = list(face = "bold", size = 10)) +
theme_bw() +
theme(legend.position="none", strip.text.x = element_text(face = "bold", size = 15),
strip.text.y = element_text(face = "bold", size = 5),
axis.title = element_text(size=5,face="bold"),
axis.text = element_text(size=5)) +
ylim(c(-2,2)) +
stat_summary(fun = median, geom = "line", aes(group=1, color=gene), size = 1) +
ylab("") + xlab("")
return(figure)
}
grp_name = combn(c("Ms", "Ad", "Hi", "Sp", "S"), 2)
grp_num  = combn(1:5, 2)
bp_list <- c()
for (i in c(1:8,10)){
tissue_num  = grp_num[,i]
tissue_name = grp_name[,i]
gene_identify = which(agemap_result$MCTC_tbl$qval < 0.05 & agemap_result$pairs_MI_tbl_list[[i]]$qval < 0.05)
bp_list <-c(bp_list, list(tissue_gene_boxplot(tissue_num, gene_identify, tissue_name)))
}
bp1 = plot_grid(bp_list[[1]], NULL, nrow = 1, rel_widths = c(13, 0))
bp2 = plot_grid(bp_list[[2]], NULL, nrow = 1, rel_widths = c(3, 9))
bp3 = plot_grid(bp_list[[3]], NULL, nrow = 1, rel_widths = c(7, 6))
bp4 = plot_grid(bp_list[[4]], NULL, nrow = 1, rel_widths = c(8, 5))
bp5 = plot_grid(bp_list[[5]], NULL, nrow = 1, rel_widths = c(1, 8))
bp6 = plot_grid(bp_list[[6]], NULL, nrow = 1, rel_widths = c(4, 8))
bp7 = plot_grid(bp_list[[7]], NULL, nrow = 1, rel_widths = c(5, 7))
bp8 = plot_grid(bp_list[[8]], NULL, nrow = 1, rel_widths = c(7, 6))
bp10 = plot_grid(bp_list[[9]], NULL, nrow = 1, rel_widths = c(5, 7))
supfig1 = plot_grid(bp1, bp2, bp3, bp4, bp5, bp6, bp7, bp8, bp10,
ncol = 1, align = "v", axis = "tblr")
ggsave(supfig1, width = 7.5, height = 10, unit = "in", file = "supfig1_mcmi.svg")
figure <- ggboxplot(tissue, x = "time", y = "expression",
add = "jitter", add.params = list(alpha = 0.6, size = 1),
facet.by = c("tissue", "gene"), color = "gene",
font.label = list(face = "bold", size = 5)) +
theme_bw() +
theme(legend.position="none", strip.text.x = element_text(face = "bold", size = 15),
strip.text.y = element_text(face = "bold", size = 5),
axis.title = element_text(size=5,face="bold"),
axis.text = element_text(size=5)) +
ylim(c(-2,2)) +
stat_summary(fun = median, geom = "line", aes(group=1, color=gene), size = 1) +
ylab("") + xlab("")
return(figure)
## 02. MC-TC identified genes
tissue_gene_boxplot <- function(tissue_label, gene, tissue_name){
tissue1 = scale(agemap_data_list[[tissue_label[1]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[1]]])
tissue2 = scale(agemap_data_list[[tissue_label[2]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[2]]])
tissue1.long = tissue1 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[1])
tissue2.long = tissue2 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[2])
tissue = rbind(tissue1.long, tissue2.long)
# tissue$gene = gene_map$SYMBOL[match(tissue$gene,gene_map$UNIGENE)]
figure <- ggboxplot(tissue, x = "time", y = "expression",
add = "jitter", add.params = list(alpha = 0.6, size = 1),
facet.by = c("tissue", "gene"), color = "gene",
font.label = list(face = "bold", size = 5)) +
theme_bw() +
theme(legend.position="none", strip.text.x = element_text(face = "bold", size = 15),
strip.text.y = element_text(face = "bold", size = 5),
axis.title = element_text(size=5,face="bold"),
axis.text = element_text(size=5)) +
ylim(c(-2,2)) +
stat_summary(fun = median, geom = "line", aes(group=1, color=gene), size = 1) +
ylab("") + xlab("")
return(figure)
}
grp_name = combn(c("Ms", "Ad", "Hi", "Sp", "S"), 2)
grp_num  = combn(1:5, 2)
bp_list <- c()
for (i in c(1:8,10)){
tissue_num  = grp_num[,i]
tissue_name = grp_name[,i]
gene_identify = which(agemap_result$MCTC_tbl$qval < 0.05 & agemap_result$pairs_MI_tbl_list[[i]]$qval < 0.05)
bp_list <-c(bp_list, list(tissue_gene_boxplot(tissue_num, gene_identify, tissue_name)))
}
bp1 = plot_grid(bp_list[[1]], NULL, nrow = 1, rel_widths = c(13, 0))
bp2 = plot_grid(bp_list[[2]], NULL, nrow = 1, rel_widths = c(3, 9))
bp3 = plot_grid(bp_list[[3]], NULL, nrow = 1, rel_widths = c(7, 6))
bp4 = plot_grid(bp_list[[4]], NULL, nrow = 1, rel_widths = c(8, 5))
bp5 = plot_grid(bp_list[[5]], NULL, nrow = 1, rel_widths = c(1, 8))
bp6 = plot_grid(bp_list[[6]], NULL, nrow = 1, rel_widths = c(4, 8))
bp7 = plot_grid(bp_list[[7]], NULL, nrow = 1, rel_widths = c(5, 7))
bp8 = plot_grid(bp_list[[8]], NULL, nrow = 1, rel_widths = c(7, 6))
bp10 = plot_grid(bp_list[[9]], NULL, nrow = 1, rel_widths = c(5, 7))
supfig1 = plot_grid(bp1, bp2, bp3, bp4, bp5, bp6, bp7, bp8, bp10,
ncol = 1, align = "v", axis = "tblr")
ggsave(supfig1, width = 7.5, height = 10, unit = "in", file = "supfig1_mcmi.svg")
## 02. MC-TC identified genes
tissue_gene_boxplot <- function(tissue_label, gene, tissue_name){
tissue1 = scale(agemap_data_list[[tissue_label[1]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[1]]])
tissue2 = scale(agemap_data_list[[tissue_label[2]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[2]]])
tissue1.long = tissue1 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[1])
tissue2.long = tissue2 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[2])
tissue = rbind(tissue1.long, tissue2.long)
# tissue$gene = gene_map$SYMBOL[match(tissue$gene,gene_map$UNIGENE)]
figure <- ggboxplot(tissue, x = "time", y = "expression",
add = "jitter", add.params = list(alpha = 0.6, size = 1),
facet.by = c("tissue", "gene"), color = "gene",
font.label = list(face = "bold", size = 25)) +
theme_bw() +
theme(legend.position="none", strip.text.x = element_text(face = "bold", size = 15),
strip.text.y = element_text(face = "bold", size = 15),
axis.title = element_text(size=15,face="bold"),
axis.text = element_text(size=15)) +
ylim(c(-2,2)) +
stat_summary(fun = median, geom = "line", aes(group=1, color=gene), size = 1) +
ylab("") + xlab("")
return(figure)
}
grp_name = combn(c("Ms", "Ad", "Hi", "Sp", "S"), 2)
grp_num  = combn(1:5, 2)
bp_list <- c()
for (i in c(1:8,10)){
tissue_num  = grp_num[,i]
tissue_name = grp_name[,i]
gene_identify = which(agemap_result$MCTC_tbl$qval < 0.05 & agemap_result$pairs_MI_tbl_list[[i]]$qval < 0.05)
bp_list <-c(bp_list, list(tissue_gene_boxplot(tissue_num, gene_identify, tissue_name)))
}
bp1 = plot_grid(bp_list[[1]], NULL, nrow = 1, rel_widths = c(13, 0))
bp2 = plot_grid(bp_list[[2]], NULL, nrow = 1, rel_widths = c(3, 9))
bp3 = plot_grid(bp_list[[3]], NULL, nrow = 1, rel_widths = c(7, 6))
bp4 = plot_grid(bp_list[[4]], NULL, nrow = 1, rel_widths = c(8, 5))
bp5 = plot_grid(bp_list[[5]], NULL, nrow = 1, rel_widths = c(1, 8))
bp6 = plot_grid(bp_list[[6]], NULL, nrow = 1, rel_widths = c(4, 8))
bp7 = plot_grid(bp_list[[7]], NULL, nrow = 1, rel_widths = c(5, 7))
bp8 = plot_grid(bp_list[[8]], NULL, nrow = 1, rel_widths = c(7, 6))
bp10 = plot_grid(bp_list[[9]], NULL, nrow = 1, rel_widths = c(5, 7))
supfig1 = plot_grid(bp1, bp2, bp3, bp4, bp5, bp6, bp7, bp8, bp10,
ncol = 1, align = "v", axis = "tblr")
ggsave(supfig1, width = 20, height = 30, unit = "in", file = "supfig1_mcmi.svg")
## 02. MC-TC identified genes
tissue_gene_boxplot <- function(tissue_label, gene, tissue_name){
tissue1 = scale(agemap_data_list[[tissue_label[1]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[1]]])
tissue2 = scale(agemap_data_list[[tissue_label[2]]][,gene]) %>% data.frame()  %>% mutate(time =  agemap_label_list[[tissue_label[2]]])
tissue1.long = tissue1 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[1])
tissue2.long = tissue2 %>% tibble::rownames_to_column("ID") %>% tidyr::gather(., gene, expression, -c(ID, time), factor_key=TRUE) %>% mutate(tissue = tissue_name[2])
tissue = rbind(tissue1.long, tissue2.long)
# tissue$gene = gene_map$SYMBOL[match(tissue$gene,gene_map$UNIGENE)]
figure <- ggboxplot(tissue, x = "time", y = "expression",
add = "jitter", add.params = list(alpha = 0.6, size = 1),
facet.by = c("tissue", "gene"), color = "gene",
font.label = list(face = "bold", size = 25)) +
theme_bw() +
theme(legend.position="none", strip.text.x = element_text(face = "bold", size = 15),
strip.text.y = element_text(face = "bold", size = 15),
axis.title = element_text(size=15,face="bold"),
axis.text = element_text(size=15)) +
ylim(c(-2,2)) +
stat_summary(fun = median, geom = "line", aes(group=1, color=gene), size = 1) +
ylab("") + xlab("")
return(figure)
}
grp_name = combn(c("Ms", "Ad", "Hi", "Sp", "S"), 2)
grp_num  = combn(1:5, 2)
bp_list <- c()
for (i in c(1:8,10)){
tissue_num  = grp_num[,i]
tissue_name = grp_name[,i]
gene_identify = which(agemap_result$MCTC_tbl$qval < 0.05 & agemap_result$pairs_MI_tbl_list[[i]]$qval < 0.05)
bp_list <-c(bp_list, list(tissue_gene_boxplot(tissue_num, gene_identify, tissue_name)))
}
bp1 = plot_grid(bp_list[[1]], NULL, nrow = 1, rel_widths = c(13, 0))
bp2 = plot_grid(bp_list[[2]], NULL, nrow = 1, rel_widths = c(3, 9))
bp3 = plot_grid(bp_list[[3]], NULL, nrow = 1, rel_widths = c(7, 6))
bp4 = plot_grid(bp_list[[4]], NULL, nrow = 1, rel_widths = c(8, 5))
bp5 = plot_grid(bp_list[[5]], NULL, nrow = 1, rel_widths = c(1, 8))
bp6 = plot_grid(bp_list[[6]], NULL, nrow = 1, rel_widths = c(4, 8))
bp7 = plot_grid(bp_list[[7]], NULL, nrow = 1, rel_widths = c(5, 7))
bp8 = plot_grid(bp_list[[8]], NULL, nrow = 1, rel_widths = c(7, 6))
bp10 = plot_grid(bp_list[[9]], NULL, nrow = 1, rel_widths = c(5, 7))
supfig1 = plot_grid(bp1, bp2, bp3, bp4, bp5, bp6, bp7, bp8, bp10,
ncol = 1, align = "v", axis = "tblr")
ggsave(supfig1, width = 20, height = 30, unit = "in", file = "supfig1_mcmi.svg")
library(MSCC)
library(MSCC)
study.data.list = agemap_data_list; study.label.list = agemap_label_list
w.est = NULL; n.perm = 1000; n.parallel = 50
if(!all(unlist(lapply(study.data.list, ncol)) == ncol(study.data.list[[1]]))){stop("The number of features should be equal between two studies.")}
if(is.null(w.est)){w.est <- unname(c(table(unlist(study.label.list)))/length(unlist(study.label.list)))}
feature.names <- colnames(study.data.list[[1]])
## Obtain the permuted labels
n.feature <- ncol(study.data.list[[1]])
n.study   <- length(study.data.list)
size.study <- sapply(1:n.study, function(s) length(study.label.list[[s]]))
perm.label <- list()
for(p in 1:n.perm){
perm <- lapply(1:n.study, function(s) sample(study.label.list[[s]]))
perm.label <- c(perm.label, list(perm))
}
### an overall analysis
## permutation stat
perm.res <- mclapply(1:n.perm, function(p) mc.stat(study.data.list, perm.label[[p]], w.est = w.est), mc.cores = n.parallel)
MCTC_perm <- t(sapply(1:n.perm, function(p) perm.res[[p]]$MCTC_stat))
minMCC_perm <- t(sapply(1:n.perm, function(p) perm.res[[p]]$minMCC_stat))
stat <- mc.stat(study.data.list, study.label.list, w.est = w.est)
library(parallel)
n.perm = 10
n.parallel = 1
if(!all(unlist(lapply(study.data.list, ncol)) == ncol(study.data.list[[1]]))){stop("The number of features should be equal between two studies.")}
if(is.null(w.est)){w.est <- unname(c(table(unlist(study.label.list)))/length(unlist(study.label.list)))}
feature.names <- colnames(study.data.list[[1]])
## Obtain the permuted labels
n.feature <- ncol(study.data.list[[1]])
n.study   <- length(study.data.list)
size.study <- sapply(1:n.study, function(s) length(study.label.list[[s]]))
perm.label <- list()
for(p in 1:n.perm){
perm <- lapply(1:n.study, function(s) sample(study.label.list[[s]]))
perm.label <- c(perm.label, list(perm))
}
### an overall analysis
## permutation stat
perm.res <- mclapply(1:n.perm, function(p) mc.stat(study.data.list, perm.label[[p]], w.est = w.est), mc.cores = n.parallel)
perm.res
load("~/Library/CloudStorage/OneDrive-UniversityofPittsburgh/Ongoing_Project/Methodology/202203_multi_class_correlation/20220719_package/MSCC/inst/script_paper/agemap/agemap_result_v2.RData")
agemap_mcc_test$MCTC_tbl
View(agemap_mcc_test$MCTC_tbl)
View(agemap_mcc_test$minMCC_tbl)
1.3 * 0.7
agemap_mcc_test$pairs_MI_tbl_list$`1:2`
load("~/Library/CloudStorage/OneDrive-UniversityofPittsburgh/Ongoing_Project/Methodology/202203_multi_class_correlation/20220719_package/MSCC/inst/script_paper/agemap/agemap_result_v2.RData")
### after server
library(ggpubr)
library(org.Mm.eg.db)
gene_map <- select(org.Mm.eg.db, keys=colnames(agemap_data_list[[1]]),
columns=c("GENENAME","SYMBOL"), keytype="UNIGENE")
View(agemap_mcc_test$MCTC_tbl)
View(agemap_mcc_test$minMCC_tbl)
View(agemap_mcc_test$pairs_MI_tbl_list$`1:2`)
sum(p.adjust(agemap_mcc_test$minMCC_tbl$pval, method = "fdr"))
sum(p.adjust(agemap_mcc_test$minMCC_tbl$pval, method = "fdr") < 0.05)
sum(p.adjust(agemap_mcc_test$minMCC_tbl$pval, method = "BH") < 0.05)
load("~/Library/CloudStorage/OneDrive-UniversityofPittsburgh/Ongoing_Project/Methodology/202203_multi_class_correlation/20220719_package/MSCC/inst/script_paper/agemap/agemap_result.RData")
sum(p.adjust(agemap_mcc_test$minMCC_tbl$pval, method = "BH") < 0.05)
sum(p.adjust(agemap_result$minMCC_tbl$pval, method = "BH") < 0.05)
sum(p.adjust(agemap_mcc_test$minMCC_tbl$pval, method = "BH") < 0.05)
sum(p.adjust(agemap_mcc_test$MTCT_tbl$pval, method = "BH") < 0.05)
sum(p.adjust(agemap_mcc_test$MCTC_tbl$pval, method = "BH") < 0.05)
sum(p.adjust(agemap_result$MCTC_tbl$pval, method = "BH") < 0.05)
load("~/Library/CloudStorage/OneDrive-UniversityofPittsburgh/Ongoing_Project/Methodology/202203_multi_class_correlation/20220719_package/MSCC/inst/script_paper/tmp.RData")
install.packages("BiocManager")
?install
library(BiocManager)
?install
BiocManager::install(c("limma", "samr", "DESeq2", "edgeR",
"preprocessCore", "EnhanceVolcano",
"impute", "ALL", "pasilla"))
p.adjust
load("C:/Users/zou19/OneDrive - University of Pittsburgh/Ongoing_Project/Methodology/202203_multi_class_correlation/20220719_package/MSCC/inst/script_paper/agemap/agemap_result_v3.RData")
View(agemap_mcc_test$MCTC_tbl)
View(agemap_mcc_test$minMCC_tbl)
library(MSCC)
load("C:/Users/zou19/OneDrive - University of Pittsburgh/Ongoing_Project/Methodology/202203_multi_class_correlation/20220719_package/MSCC/inst/script_paper/agemap/agemap_result_v4.RData")
View(agemap_mcc_test$MCTC_tbl)
View(agemap_mcc_test$minMCC_tbl)
